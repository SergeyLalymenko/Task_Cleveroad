[{"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\index.js":"1","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\theme.js":"2","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\firebase.js":"3","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\store\\index.js":"4","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\StickerItem\\StickerItem.js":"5","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\store\\actions\\stickers.js":"6","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\StickerForm\\StickerForm.js":"7","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\App.js":"8","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\Header\\Header.js":"9","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\Login\\Login.js":"10","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\StickersList\\StickersList.js":"11"},{"size":328,"mtime":1607715770873,"results":"12","hashOfConfig":"13"},{"size":396,"mtime":1607715770881,"results":"14","hashOfConfig":"13"},{"size":506,"mtime":1607878012684,"results":"15","hashOfConfig":"13"},{"size":238,"mtime":1607809394890,"results":"16","hashOfConfig":"13"},{"size":3452,"mtime":1608064588201,"results":"17","hashOfConfig":"13"},{"size":2733,"mtime":1608116678956,"results":"18","hashOfConfig":"13"},{"size":5935,"mtime":1608116606924,"results":"19","hashOfConfig":"13"},{"size":4377,"mtime":1608059627189,"results":"20","hashOfConfig":"13"},{"size":1335,"mtime":1608048264865,"results":"21","hashOfConfig":"13"},{"size":1736,"mtime":1608112141115,"results":"22","hashOfConfig":"13"},{"size":1249,"mtime":1607878884254,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"57tuou",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\index.js",[],["50","51"],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\theme.js",["52"],"import { createMuiTheme } from '@material-ui/core'\r\nimport blue from '@material-ui/core/colors/blue'\r\nimport red from '@material-ui/core/colors/red'\r\n\r\n\r\n\r\nexport default (darkMode) => createMuiTheme({\r\n    palette: {\r\n        type: darkMode ? 'dark' : 'light',\r\n        primary: {\r\n           main: blue[400],\r\n        },\r\n        secondary: {\r\n            main: red[400],\r\n        },\r\n    }\r\n})","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\firebase.js",[],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\store\\index.js",[],["53","54"],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\StickerItem\\StickerItem.js",["55"],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\store\\actions\\stickers.js",[],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\StickerForm\\StickerForm.js",[],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\App.js",["56","57","58","59","60"],"import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/core'\nimport { addNewCollection } from './store/actions/stickers'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Header from './components/Header/Header'\nimport StickersList from './components/StickersList/StickersList'\nimport StickerForm from './components/StickerForm/StickerForm'\nimport Login from './components/Login/Login'\nimport { fire } from './firebase'\nimport { Route, Redirect, Switch, BrowserRouter as Router } from 'react-router-dom'\nimport './App.css'\n\n\n\nfunction App({addNewCollection}) {\n\n  const [darkMode, setDarkMode] = useState(false);\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [verificationPassword, setVerificationPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState('');\n\n  const createdTheme = theme(darkMode);\n\n  useEffect(() => {\n    authListener();\n    checkUserMode();\n  }, [])\n\n  function toggleTheme(){\n    darkMode ? setMode(false) : setMode(true)\n  }\n\n  function checkUserMode(){\n    const isDarkMode = localStorage.getItem('darkMode');\n    switch(isDarkMode){\n      case 'true': setMode(true); break;\n      case 'false': setMode(false); break;\n      default: localStorage.setItem('darkMode', false); break;\n    }\n  }\n\n  function setMode(boolean){\n    localStorage.setItem('darkMode', boolean);\n    setDarkMode(boolean);\n  }\n\n  function clearInputs(){\n    setEmail('');\n    setPassword('');\n  }\n\n  function clearErrors(){\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  function handleLogin(){\n    clearErrors();\n    fire.auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((err) => {\n      switch(err.code){\n        case 'auth/user-disabled':\n        case 'auth/user-not-found': setEmailError(err.message); break;\n        case 'auth/invalid-email': setPasswordError(err.message); break;\n      }\n    })\n  }\n\n  function handleSignup(){\n    if(password == verificationPassword){\n      signupUser();\n    } else {\n      setPasswordError('Passwords do not match');\n    }\n  }\n\n  function signupUser(){\n    clearErrors();\n    fire.auth()\n    .createUserWithEmailAndPassword(email, password).then(() => addNewCollection())\n    .catch((err) => {\n      switch(err.code){\n        case 'auth/email-already-in-use':\n        case 'auth/invalid-email':setEmailError(err.message); break;\n        case 'auth/weak-password': setPasswordError(err.message); break;\n      }\n    })\n  }\n\n  function handleLogout(){\n    fire.auth().signOut();\n  }\n\n  function authListener(){\n    fire.auth().onAuthStateChanged((user) => {\n      if(user){\n        clearInputs();\n        setUser(user)\n      } else{\n        setUser('none')\n      }\n    })\n  }\n\n  return (\n      <Router>\n        <ThemeProvider theme={createdTheme}>\n          <CssBaseline/>\n            <div className=\"main\">\n              {user == '' ? 'Загрузка...' : user !== 'none' ? (\n                <>\n                  <Header onToggleThemeClick={toggleTheme} handleLogout={handleLogout}/>\n                  <Switch>\n                    <Route path=\"/form/:id\">\n                      <StickerForm/>\n                    </Route>\n                    <Route path=\"/form\">\n                      <StickerForm/>\n                    </Route>\n                    <Route path=\"/list\">\n                      <StickersList/>\n                    </Route>\n                    <Route path=\"*\">\n                      <Redirect to=\"/list\"></Redirect>\n                    </Route>\n                  </Switch>\n                </>\n              ) : (\n                <Login email={email} setEmail={setEmail} password={password} setPassword={setPassword} verificationPassword={verificationPassword}setVerificationPassword={setVerificationPassword} handleLogin={handleLogin} handleSignup={handleSignup} hasAccount={hasAccount} setHasAccount={setHasAccount} emailError={emailError} passwordError={passwordError}/>\n              )}\n            </div>\n        </ThemeProvider>\n      </Router>\n  );\n}\n\nconst mapDispatchToProps = {\n  addNewCollection,\n}\n\nexport default connect(null, mapDispatchToProps)(App)","C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\Header\\Header.js",[],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\Login\\Login.js",[],"C:\\Users\\Сергей\\Desktop\\Hillel\\Task_Cleveroad\\my-app\\src\\components\\StickersList\\StickersList.js",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":7,"column":1,"nodeType":"69","endLine":17,"endColumn":3},{"ruleId":"63","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":44,"column":47,"nodeType":"74","messageId":"75","endLine":44,"endColumn":49},{"ruleId":"76","severity":1,"message":"77","line":33,"column":6,"nodeType":"78","endLine":33,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":68,"column":7,"nodeType":"82","messageId":"83","endLine":72,"endColumn":8},{"ruleId":"72","severity":1,"message":"73","line":77,"column":17,"nodeType":"74","messageId":"75","endLine":77,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":89,"column":7,"nodeType":"82","messageId":"83","endLine":93,"endColumn":8},{"ruleId":"72","severity":1,"message":"73","line":117,"column":21,"nodeType":"74","messageId":"75","endLine":117,"endColumn":23},{"ruleId":"76","severity":1,"message":"84","line":13,"column":5,"nodeType":"85","endLine":13,"endColumn":14,"suggestions":"86"},{"ruleId":"72","severity":1,"message":"73","line":19,"column":27,"nodeType":"74","messageId":"75","endLine":19,"endColumn":29},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["87"],["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'checkUserMode'. Either include them or remove the dependency array.","ArrayExpression",["89"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'fetchStickers'. Either include it or remove the dependency array.","Identifier",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [authListener, checkUserMode]",{"range":"95","text":"96"},"Update the dependencies array to be: [fetchStickers]",{"range":"97","text":"98"},[1204,1206],"[authListener, checkUserMode]",[431,433],"[fetchStickers]"]